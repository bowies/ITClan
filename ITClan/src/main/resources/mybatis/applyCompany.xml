<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="applycompany">
		
	<insert id="create" parameterType="ApplyCompanyDTO">
	<selectKey order="BEFORE" keyProperty="applyCode" resultType="int">
	SELECT NVL(MAX(applyCode), 0) + 1 as applyCode FROM applycompany
	</selectKey>
	insert into applycompany(applyCode,memberID,applyDate,offerNum,resumeNum,portfolioNum)
	values(#{applyCode},#{memberID},sysdate,#{offerNum},#{resumeNum},#{portfolioNum})
	
	</insert>
	
	
	<select id="memberIDCheck" resultType="int" parameterType="Map">
	select count(*) from applycompany
	where memberID =#{memberID} and offerNum =#{offerNum} 
	</select>
	<delete id="delete_personal" parameterType="String">
	delete from applycompany
	where memberID =#{memberID} and offerNum =#{offerNum} 
	</delete>
	<delete id="delete_personalA" parameterType="String">
	delete from applycompany
	where memberID =#{memberID}
	</delete>
	
	<select id="read_personal" parameterType="int" resultType="OfferDTO">
	select * from offer
	where offerNum = #{offerNum}
	</select>
	<select id="total_personal" parameterType="String" resultType="int">
		select count(*)
		from applycompany a, offer o
		where a.offerNum = o.offerNum
		and a.memberID = #{memberID}
	</select>
<resultMap type="ApplyCompanyDTO" id="PersonalMap">
<result property="applyCode" column="applyCode"/>
<result property="applyDate" column="applyDate"/>
<result property="memberID" column="memberID"/>
<result property="offerNum" column="offerNum"/>
<result property="resumeNum" column="resumeNum"/>
<result property="portfolioNum" column="portfolioNum"/>
<result property="viewCheck" column="viewCheck"/>
<result property="pfdto.portfolioName" column="portfolioName"/>
<result property="redto.resumeName" column="resumeName"/>
<result property="ridto.education" column="education"/>
<result property="ridto.career" column="career"/>
<result property="ridto.employmentType" column="employmentType"/>
<result property="ridto.exSalary" column="exSalary"/>
<result property="ridto.disableGrade" column="disableGrade"/>
<result property="ridto.picture" column="picture"/>
<result property="ridto.exArea" column="exArea"/>
<result property="ridto.exField" column="exField"/>
<result property="ridto.military" column="military"/>
<result property="ridto.schoolName" column="schoolName"/>
<result property="ridto.major" column="major"/>
<result property="ridto.termTime" column="termtime"/>
<result property="ridto.GPA" column="GPA"/>
<collection property="offerList" column="offerNum" javaType="List" ofType="OfferDTO"
 resultMap="applycompany.OfferDTOListMap"/>
<collection property="personalmemberList" column="memberID" javaType="List" ofType="PersonalMemberDTO"
 resultMap="applycompany.PersonalMemberDTOListMap"/>

</resultMap>
<resultMap type="OfferDTO" id="OfferDTOListMap">
<result property="offerNum" column="offerNum"/>
<result property="title" column="title"/>
<result property="companyName" column="companyName"/>
<result property="recruitment" column="recruitment"/>
</resultMap>
<resultMap type="PersonalMemberDTO" id="PersonalMemberDTOListMap">
<result property="memberID" column="memberID"/>
<result property="name" column="name"/>
<result property="birth" column="birth"/>
<result property="phone" column="phone"/>
<result property="address" column="address"/>
<result property="address2" column="address2"/>
<result property="email" column="email"/>
</resultMap>

<select id="read_c" parameterType="Map" resultMap="PersonalMap">
	select  name,memberID,birth,phone,address,address2,email,education,
		career,employmentType,exSalary,disablegrade,picture,schoolName,major,termtime,GPA,
	exArea,exField,military,resumeName,portfolioName
	from(
	select p.name,a.memberID,p.birth,p.phone,p.address,p.address2,p.email, r.education,
		r.career,r.employmentType,r.exSalary,r.disablegrade,r.picture,r.schoolName,r.major,r.termtime,r.GPA,
	r.exArea,r.exField,r.military,re.resumeName,pf.portfolioName,pf.portfolioNum , re.resumeNum,a.offerNum
	from resumeinfo r ,applycompany a ,personalmember p ,resume re , portfolio pf
	where p.memberID = r.memberID and r.memberID = a.memberID
	and p.memberID = re.memberID and p.memberID = pf.memberID 
	)
	where memberID = #{memberID} and offerNum = #{offerNum}
	 and resumeNum =#{resumeNum} and portfolioNum = #{portfolioNum}
</select>


	<select id="list_personal" parameterType="Map" resultMap = "PersonalMap">
		select applyDate , memberID,offerNum,viewCheck , title,companyName,recruitment,resumeNum,portfolioNum,
		r
		from(
		select applyDate , memberID,offerNum ,viewCheck, title,companyName,recruitment,resumeNum,portfolioNum,rownum
		r
		from(
		select a.applyDate , a.memberID,a.offerNum ,a.viewCheck,
		o.title,o.companyName,o.recruitment,a.resumeNum,a.portfolioNum
		from applycompany a,offer o
		where o.offerNum = a.offerNum
		and a.memberID=#{memberID}
		order by a.applyDate desc
		)
		)
	<![CDATA[
	where r >=#{sno} and r<=#{eno}
	]]>
	
	</select>

	<select id="read_p" parameterType="Map" resultMap="PersonalMap">
	select o.title,a.offerNum,o.companyName,o.recruitment,pm.name,pf.portfolioName,a.portfolioNum,re.resumeName,a.resumeNum
from offer o ,applycompany a , resume re , personalmember pm ,portfolio pf
where o.offerNum = a.offerNum and pm.memberID = pf.memberID and pm.memberID = re.memberID and a.memberID = pm.memberID
and a.offerNum = #{offerNum} and a.memberID = #{memberID} and pf.portfolioNum = #{portfolioNum} and re.resumeNum = #{resumeNum}
	</select>
	
<select id="list_company" parameterType="Map" resultMap="PersonalMap">
 select memberID,name,applyDate,resumeNum,portfolioNum,email,r	
 	from(
 	select memberID , name, applyDate,resumeNum,portfolioNum,email,rownum r
 	from(
 	select a.memberID, p.name , a.applyDate,a.resumeNum , a.portfolioNum,p.email
	from Personalmember p , applycompany a
	where p.memberID = a.memberID and a.offerNum = #{offerNum}
	)
	)
	<![CDATA[
	where r >=#{sno} and r<=#{eno}
	]]>
		order by applyDate asc
	
</select>
	
	<update id="viewup" parameterType="int">
	update applycompany
	set
	viewCheck = viewCheck + 1
	where viewCheck = 0 and offerNum = #{offerNum} and memberID = #{memberID}
	</update>
	
<select id="viewCheck">
select viewCheck from applycompany
where offerNum = #{offerNum} and memberID = #{memberID}
</select>
	
		<select id="total_company" parameterType="int" resultType="int">
	 select count(*) 
 from applycompany a , offer o 
 where a.offerNum = o.offerNum
 and a.offerNum = #{offerNum}
	
	</select>
	
	<delete id="delete_company">
	delete from applycompany
where offerNum =#{offerNum}
	</delete>
	<!-- resumedetail (list/read) -->

	<select id="list_resume" parameterType="String" resultType="ResumeDTO">
	select resumeNum,memberID ,resumeName from resume
	where memberID=#{memberID}
</select>

	<select id="list_portfolio" parameterType="String" resultType="PortFolioDTO">
	select portfolioNum , memberID, portfolioName 
	from portfolio
	where memberID = #{memberID}
	</select>
	
	
	<select id="list_License" parameterType="String" resultType="LicenseDTO" >
	select takeDate,qualification from license
where memberID = #{memberID}
	</select>
	<select id="list_externalactivity" parameterType="String" resultType="externalactivityDTO" >
	select actPeriod,actContent,actSector from externalactivity
where memberID = #{memberID}
	</select>
	
</mapper>