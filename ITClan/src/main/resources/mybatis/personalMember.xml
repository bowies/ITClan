<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="personalmember">
<select id="resumeCheck" parameterType="String" resultType="int" >
select count(*) from resumeinfo
where memberID =#{memberID}
</select>
<select id="resumepic" parameterType="String" resultType="String">
select picture from resumeinfo
where memberID = #{memberID}
</select>
<update id="updatepic" parameterType="ResumeInfoDTO">
update resumeinfo
set
picture = #{picture}
where memberID = #{memberID}
</update>

	<insert id="create" parameterType="PersonalMemberDTO">
		insert into	personalmember(memberID,name,birth,email,phone,passwd,address,address2)
		values(#{memberID},#{name},#{birth},#{email},#{phone},#{passwd},#{address},#{address2})
	</insert>
	<delete id="delete" parameterType="String">
	delete from personalmember
where memberID = #{memberID}
	</delete>
	<select id="getGrade" parameterType="String" resultType="PersonalMemberDTO">
	select grade,name from personalmember
	where memberID =#{memberID}
	</select>
	
	<select id="login" parameterType="Map" resultType="int">
	select count(*) from personalmember
	where memberID = #{memberID} and passwd = #{passwd}
	</select>
	<select id="pwFind" parameterType="Map" resultType="String">
	select passwd from personalmember
	where memberID = #{memberID} and email = #{email}
	</select>
	<select id="idFind" parameterType="Map" resultType="String">
	select memberID from personalmember
	where name = #{name} and email = #{email}
	</select>
	<select id="emailCheck" parameterType="String" resultType="int">
	select count(email) from personalmember
	where email=#{email}
	</select>
	<select id="idCheck" parameterType="String" resultType="int">
	select count(memberID) from personalmember
	where memberID=#{memberID}
	</select>
	<select id="passwdCheck" parameterType="Map" resultType="int">
	select count(passwd) from personalmember
	where memberID = #{memberID} and passwd = #{passwd}
	</select>
	<select id="read" parameterType="String" resultType="PersonalMemberDTO">
	select memberID,name,birth,email,phone,address,address2
	from personalmember
	where memberID = #{memberID}
	</select>
	<update id="update" parameterType="PersonalMemberDTO">
	update personalmember 
	set  
	name =#{name}, 
	phone=#{phone}, 
	address = #{address}, 
	address2 = #{address2}
	where memberID =#{memberID}
	</update>
	<update id="updatePw" parameterType="Map">
	update personalmember
	set
	passwd =#{passwd}
	where memberID = #{memberID}
	</update>
	
	<select id="total" parameterType="Map" resultType="int">
		select count(*) from personalmember
		<where>
			<if test="col == 'memberID'">
				memberID like '%' || #{word} || '%'
			</if>
			<if test="col == 'name'">
				name like '%' || #{word} || '%'
			</if>
		</where>
	</select>
	
	
	<select id="list" parameterType="Map" resultType="PersonalMemberDTO">
		select memberID,name,birth,email,phone,r
		from(
		select memberID,name,birth,email,phone,rownum r
		from(
		select memberID,name,birth,email,phone
		from personalmember
		<where>
			<if test="col == 'memberID'">
				memberID like '%' || #{word} || '%'
			</if>
			<if test="col == 'name'">
				name like '%' || #{word} || '%'
			</if>
		</where>
		order by memberID desc
		)
		) 
	<![CDATA[
	where r >= #{sno} and r <= #{eno}
	]]>
	</select>
</mapper>