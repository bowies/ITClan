<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="companymember">


	<select id="getGrade" parameterType="String" resultType="String">
		SELECT
		grade FROM CompanyMember
		WHERE companyID = #{companyID}
	</select>

	<select id="loginCheck" parameterType="Map" resultType="int">
		select
		count(companyID) from CompanyMember
		where companyID = #{companyID} and passwd = #{passwd}
	</select>

	<select id="duplicateEmail" parameterType="String" resultType="int">
		select count(email) From CompanyMember
		where email = #{email}
	</select>

	<select id="duplicateID" parameterType="String" resultType="int">
		select count(companyID) From CompanyMember
		where companyID = #{companyID}
	</select>


<select id="pwFind" parameterType="Map" resultType="String">
	select passwd from CompanyMember
	where companyID = #{companyID} and email = #{email}
	</select>


	<select id="idFind" parameterType="Map" resultType="String">
	select companyID from CompanyMember
	where name = #{name} and email = #{email}
	</select>

	<select id="emailCheck" parameterType="String" resultType="int">
	select count(email) from CompanyMember
	where email=#{email}
	</select>

	
	<select id="idCheck" parameterType="String" resultType="int">
	select count(companyID) from CompanyMember
	where companyID=#{companyID}
	</select>

		<select id="passwdCheck" parameterType="Map" resultType="int">
	select count(passwd) from CompanyMember
	where companyID = #{companyID} and passwd = #{passwd}
	</select>


<update id="updatePw" parameterType="Map">
	update CompanyMember
	set
	passwd =#{passwd}
	where companyID = #{companyID}
	</update>

	<insert id="create" parameterType="CompanyMemberDTO">
		insert into
		CompanyMember(companyID, name, passwd, phone, email,
		companyNumber, companyName)
		values(#{companyID}, #{name}, #{passwd}, #{phone},
		#{email}, #{companyNumber}, #{companyName})
	</insert>
	



	<select id="read" resultType="CompanyMemberDTO" parameterType="String">
		SELECT
		companyID, name, passwd, phone, email, companyNumber, companyName
		FROM
		CompanyMember
		WHERE companyID = #{companyID}
	</select>

	<update id="update" parameterType="CompanyMemberDTO">
		UPDATE CompanyMember
		SET
		phone = #{phone}, email = #{email}, companyNumber = #{companyNumber}, companyName = #{companyName}
		WHERE companyID = #{companyID}
	</update>


	<delete id="delete" parameterType="String">
		delete from CompanyMember
		where companyID = #{companyID}
	</delete>


	<select id="list" resultType="CompanyMemberDTO" parameterType="Map">

		select companyID, name, phone, email, companyNumber, companyName, r
		from(
		select companyID, name, phone, email, companyNumber, companyName,
		rownum r
		from(
		select companyID, name, phone, email, companyNumber,
		companyName
		from CompanyMember
		<where>
			<choose>
				<when test="col=='name'">
					name like '%'||#{word}||'%'
				</when>
				<when test="col=='companyID'">
					companyID like '%'||#{word}||'%'
				</when>
			</choose>
		</where>
		ORDER BY companyID DESC

		)
		)                                                                            
   <![CDATA[                                                                        
   where r>=#{sno} and r<=#{eno}  
   ]]>
	</select>

	<select id="total" parameterType="Map" resultType="int">
		select count(*) from CompanyMember
		<where>
			<choose>
				<when test="col=='name'">
					name LIKE '%' || #{word} || '%'
				</when>

			</choose>
		</where>
	</select>

</mapper>